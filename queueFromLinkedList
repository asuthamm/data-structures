// implement a queue using linked list

class Node {
  constructor(value) {
    this.value = value;
    this.next = null;
  }
}

class queueFromLinkedList {
  constructor() {
    this.head = null;
    this.tail = null;
  }

  enqueue(val) {  // add to the end of ll
    if (!this.head) {
      this.head = new Node(val);
      this.tail = this.head;
    } else {
      const temp = new Node(val);
      this.tail.next = temp;
      this.tail = temp;
    }
  }

  dequeue() {
    if (!this.head) {
      return;
    } else {

      if (this.head === this.tail) {
        this.tail = null;
      }
      const temp = this.head;
      this.head = temp.next;

      return temp;
    }
  }

}

const q = new queueFromLinkedList();
q.enqueue(4);
q.enqueue(1);
q.dequeue();
console.log(q);

// console.log(q.dequeue());
q.dequeue();
console.log(q);

